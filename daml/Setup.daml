module Setup where

import Daml.Script
import DA.Text as T

data TestParties = TestParties with
  owner : Party
  identity1 : Party
  identity2 : Party
  identity3 : Party
  identity4 : Party
  identity5 : Party

getOrCreateUserParty : Text -> Script Party
getOrCreateUserParty alias = do
  userId <- validateUserId (T.asciiToLower alias)
  try do
    User _ (Some party) <- getUser userId
    pure party
  catch
    UserNotFound _ -> do
      p <- allocatePartyWithHint alias (PartyIdHint alias)
      createUser (User userId (Some p)) [CanActAs p]
      pure p

setupParties: Script TestParties
setupParties = script do
  owner <- getOrCreateUserParty "Data_Owner"
  identity1 <- getOrCreateUserParty "DataProcessor_1"
  identity2 <- getOrCreateUserParty "DataProcessor_2"
  identity3 <- getOrCreateUserParty "DataProcessor_3"
  identity4 <- getOrCreateUserParty "DataProcessor_4"
  identity5 <- getOrCreateUserParty "DataProcessor_5"
  return $ TestParties with ..

setup: Script ()
setup = script do 
  testParties@TestParties{..} <- setupParties

  return ()

