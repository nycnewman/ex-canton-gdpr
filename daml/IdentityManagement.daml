module IdentityManagement where

data KeyId = KeyId Text 
  deriving (Eq, Show)

data Encryption
  = EncNone
    -- ^ No encryption, the file is in plain text.
  | EncAES256 with keyId: KeyId, iv: Text
    -- ^ 256-bit AES encryption, CBC mode, PKCS5 padding
  deriving (Eq, Show)

data PrivateData
  = OnLedger with encryption: Encryption, dataValue: Text
  | OffLedger with encryption: Encryption, dataLocation: Text
    deriving (Eq, Show)

isEncNone : Encryption -> Bool
isEncNone EncNone = True
isEncNone _ = False

data PublicKey = PublicKey with
    publicKey : Text
    fingerprint : Text
      deriving (Eq,Show)

template DataControllerMaster with
    dataController : Party

  where
    signatory dataController

    nonconsuming choice InviteDataProcessor : ContractId DataProcessorProposal 
      with
        dataProcessor : Party
        controllerPublicKey : PublicKey

          controller dataController

          do
            create DataProcessorProposal with 
              dataController
              dataProcessor
              controllerPublicKey

template DataProcessorProposal with
    dataController : Party
    controllerPublicKey : PublicKey
    dataProcessor : Party

  where
    signatory dataController
    observer dataProcessor

    choice AcceptAndRegister : (ContractId DataProcessorValidation) with
        processorPublicKey : PublicKey
      controller dataProcessor

      do
        create DataProcessorValidation with
          dataController
          controllerPublicKey
          dataProcessor
          processorPublicKey

template DataProcessorValidation with
    dataController : Party
    controllerPublicKey : PublicKey
    dataProcessor : Party
    processorPublicKey : PublicKey

  where
    signatory dataController, dataProcessor

    choice Validate : (ContractId DataProcessorAgreement) with
      controller dataController

      do
        create DataProcessorAgreement with
          dataController
          controllerPublicKey
          dataProcessor
          processorPublicKey

template DataProcessorAgreement with
    dataController : Party
    dataProcessor : Party
    controllerPublicKey : PublicKey
    processorPublicKey : PublicKey
  where
    signatory dataController, dataProcessor

    choice RevokeByController : () with
      controller dataController

      do
        return ()

    choice RevokeByProcessor : () with
      controller dataProcessor

      do
        return ()

